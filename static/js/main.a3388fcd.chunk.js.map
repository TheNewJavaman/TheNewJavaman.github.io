{"version":3,"sources":["profile.jfif","App.js","reportWebVitals.js","index.js"],"names":["App","className","data","map","section","href","name","toLowerCase","GitHub","color","LinkedIn","src","profile","alt","id","ArrowUpward","onClick","document","getElementsByClassName","scrollIntoView","entries","entry","subtitle","description","iframeLink","title","width","height","scrolling","frameborder","allow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2LAAe,G,MAAA,IAA0B,sC,sCC8E1BA,MAvEf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,mBAEjB,qBAAKA,UAAU,QAAf,SAEIC,EAAKC,KAAI,SAAAC,GAAO,OAAI,mBAAGH,UAAU,iCAAiCI,KAAM,IAAMD,EAAQE,KAAKC,cAAvE,SAAuFH,EAAQE,YAGvH,qBAAKL,UAAU,QAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,oBAAGA,UAAU,sBAAsBI,KAAK,oCAAxC,UACE,cAACG,EAAA,EAAD,CAAQC,MAAM,UAAUR,UAAU,wBAClC,mBAAGA,UAAU,qCAAb,uBAEF,mBAAGA,UAAU,sBAAsBI,KAAK,8BAAxC,SACE,mBAAGJ,UAAU,qCAAb,oCAEF,oBAAGA,UAAU,sBAAsBI,KAAK,yCAAxC,UACE,cAACK,EAAA,EAAD,CAAUT,UAAU,wBACpB,mBAAGA,UAAU,qCAAb,4BAGJ,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,mBAAGA,UAAU,wBAAb,6BACA,mBAAGA,UAAU,qBAAb,0DAEF,qBAAKA,UAAU,oBAAoBU,IAAKC,EAASC,IAAI,aAI3D,qBAAKZ,UAAU,UAAf,SACE,qBAAKA,UAAU,iBAAf,SAEIC,EAAKC,KAAI,SAAAC,GAAO,OAAI,gCAClB,sBAAKH,UAAU,eAAea,GAAIV,EAAQE,KAAKC,cAA/C,UACE,mBAAGN,UAAU,oBAAb,SAAmCG,EAAQE,OAC3C,cAACS,EAAA,EAAD,CAAad,UAAU,oBAAoBe,QAAS,WAClDC,SAASC,uBAAuB,OAAO,GAAGC,uBAI5Cf,EAAQgB,QAAQjB,KAAI,SAAAkB,GAAK,OACvB,sBAAKpB,UAAU,GAAf,UACGoB,EAAMf,KAAO,mBAAGL,UAAU,aAAb,SAA2BoB,EAAMf,OAAY,KAC1De,EAAMC,SAAW,mBAAGrB,UAAU,iBAAb,SAA+BoB,EAAMC,WAAgB,KACtED,EAAME,YACHF,EAAME,YAAYpB,KAAI,SAAAoB,GAAW,OAAI,8BACrC,mBAAGtB,UAAU,oBAAb,SAAkCsB,SAElC,KAEHF,EAAMG,WACH,wBAAQC,MAAOJ,EAAMf,KAAML,UAAU,eAAeyB,MAAM,OAAOC,OAAO,MAAMC,UAAU,KAAKC,YAAY,KAAKC,MAAM,WAAWnB,IAAKU,EAAMG,aAC1I,yBCrDTO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAAS0B,eAAe,SAM1BZ,K","file":"static/js/main.a3388fcd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile.e283e740.jfif\";","import './App.css';\r\nimport profile from './profile.jfif';\r\n//import profile from './drone.jpg';\r\nimport data from './data.json';\r\nimport { ArrowUpward, GitHub, LinkedIn } from '@material-ui/icons';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"header-background\">\r\n        <div className=\"header-slash\"></div>\r\n      </div>\r\n      <div className=\"table\">\r\n        {\r\n          data.map(section => <a className=\"table-link link-underline-left\" href={\"#\" + section.name.toLowerCase()}>{section.name}</a>)\r\n        }\r\n      </div>\r\n      <div className=\"intro\">\r\n        <div className=\"intro-column\">\r\n          <div className=\"intro-contacts\">\r\n            <a className=\"intro-contacts-link\" href=\"https://github.com/TheNewJavaman/\">\r\n              <GitHub color=\"#404040\" className=\"intro-contacts-icon\"></GitHub>\r\n              <p className=\"intro-contacts-text link-underline\">GITHUB</p>\r\n            </a>\r\n            <a className=\"intro-contacts-link\" href=\"mailto:gpizarro@javaman.net\">\r\n              <p className=\"intro-contacts-text link-underline\">GPIZARRO@JAVAMAN.NET</p>\r\n            </a>\r\n            <a className=\"intro-contacts-link\" href=\"https://www.linkedin.com/in/gkpizarro/\">\r\n              <LinkedIn className=\"intro-contacts-icon\"></LinkedIn>\r\n              <p className=\"intro-contacts-text link-underline\">LINKEDIN</p>\r\n            </a>\r\n          </div>\r\n          <div className=\"intro-bio\">\r\n            <div className=\"intro-bio-text\">\r\n              <p className=\"intro-bio-text-header\">Gabriel Pizarro</p>\r\n              <p className=\"intro-bio-text-tag\">Make every experience an educational one.</p>\r\n            </div>\r\n            <img className=\"intro-bio-profile\" src={profile} alt=\"\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"content-column\">\r\n          {\r\n            data.map(section => <div>\r\n              <div className=\"section-name\" id={section.name.toLowerCase()}>\r\n                <p className=\"section-name-text\" >{section.name}</p>\r\n                <ArrowUpward className=\"section-name-link\" onClick={() => {\r\n                  document.getElementsByClassName(\"app\")[0].scrollIntoView();\r\n                }}></ArrowUpward>\r\n              </div>\r\n              {\r\n                section.entries.map(entry =>\r\n                  <div className=\"\">\r\n                    {entry.name ? <p className=\"entry-name\">{entry.name}</p> : null}\r\n                    {entry.subtitle ? <p className=\"entry-subtitle\">{entry.subtitle}</p> : null}\r\n                    {entry.description\r\n                      ? entry.description.map(description => <div>\r\n                        <p className=\"entry-description\">{description}</p>\r\n                      </div>)\r\n                      : null\r\n                    }\r\n                    {entry.iframeLink\r\n                      ? <iframe title={entry.name} className=\"entry-iframe\" width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src={entry.iframeLink}></iframe>\r\n                      : null\r\n                    }\r\n                  </div>\r\n                )\r\n              }\r\n            </div>)\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}